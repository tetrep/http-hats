TODO:
[eventually] sort source files, currently just a mess, but easy to edit in current form so it will stay until basic functionality of tunnel is implemented
[0]	The README
[1]	//basic proxy functionality with threading
[2]	//garbage collection of dead tunnels(via reap)
[3]	//static http-headers (no parsing, using buffers)
[4]	//settings derived from config file
[5]	daemon
[6]	http 1.1 compliant (or mostly compliant) server
[7]	//dynamic http-headers using config file
[8]	key authentication (ideally resuing ssh keys)
[9]	dynamic tunnel exit (currently determined at start up)

POSSIBLE BUGS:
[1] /*exception from io_service of listening tunnel if handle is passed, object is reaped, and then handle is called, i havent looked into it fully but this appears to be possible, first step is to make sure connection is closed before killing the object, will worry about after*/ WRONG, guess i had already thought of this so destructor properly closes sockets, but just to be safe i made a halt() function to kill io_service and kill the sockets cleanly with shutdown() to ensure tunnel collapses cleanly


README:
	first arguement passed is the profile, the program will look for a file named <profile> to load settings
	if no file extension is given, .conf is appended.
